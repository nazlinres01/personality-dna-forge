import { useState } from "react";
import { useMutation } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Switch } from "@/components/ui/switch";
import { useToast } from "@/hooks/use-toast";
import {
  Dna,
  Brain,
  Star,
  TriangleAlert,
  Eye,
  Lightbulb,
  Users,
  Copy,
  Download,
  Share,
  RotateCcw,
  FlaskRound,
  Microscope,
  Shield,
  Palette,
  Handshake,
  Compass,
  Search,
  Telescope
} from "lucide-react";

interface CharacterProfile {
  id: number;
  name: string;
  dnaSequence: string;
  personalityType: string;
  stats: {
    strength: number;
    intelligence: number;
    creativity: number;
    charisma: number;
    wisdom: number;
    luck: number;
  };
  strengths: Array<{ name: string; description: string }>;
  weaknesses: Array<{ name: string; description: string }>;
  abilities: Array<{ name: string; description: string; rarity: string; icon: string }>;
  aiEnhancements?: {
    detailed_description: string;
    growth_potential: string;
    ethical_perspective: string;
    life_philosophy: string;
    career_suggestions: string[];
    enhanced_strengths: Array<{
      name: string;
      original_description: string;
      ai_enhanced_description: string;
      category: string;
    }>;
    growth_opportunities: Array<{
      original_weakness: string;
      growth_area: string;
      opportunity_description: string;
      action_steps: string[];
    }>;
    ethical_guidelines_applied: string[];
  };
}

const iconMap = {
  brain: Brain,
  shield: Shield,
  palette: Palette,
  handshake: Handshake,
  compass: Compass,
  eye: Eye,
  lightbulb: Lightbulb,
  users: Users,
  search: Search,
  star: Star,
  telescope: Telescope,
};

export default function Home() {
  const [name, setName] = useState("");
  const [analysisDepth, setAnalysisDepth] = useState("standard");
  const [characterType, setCharacterType] = useState("balanced");
  const [useAI, setUseAI] = useState(true);
  const [profile, setProfile] = useState<CharacterProfile | null>(null);
  const [loadingProgress, setLoadingProgress] = useState(0);
  const { toast } = useToast();

  const generateProfileMutation = useMutation({
    mutationFn: async (data: { name: string, useAI: boolean }) => {
      const endpoint = data.useAI ? "/api/generate-enhanced-profile" : "/api/generate-profile";
      const response = await apiRequest("POST", endpoint, { name: data.name });
      return response.json();
    },
    onSuccess: (data) => {
      setProfile(data);
      setLoadingProgress(0);
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to generate profile. Please try again.",
        variant: "destructive",
      });
      setLoadingProgress(0);
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!name.trim()) {
      toast({
        title: "Error",
        description: "Please enter your name",
        variant: "destructive",
      });
      return;
    }
    if (name.length < 2) {
      toast({
        title: "Error",
        description: "Name must be at least 2 characters long",
        variant: "destructive",
      });
      return;
    }

    // Simulate loading progress
    setLoadingProgress(0);
    const interval = setInterval(() => {
      setLoadingProgress((prev) => {
        const newProgress = prev + Math.random() * 15;
        if (newProgress >= 100) {
          clearInterval(interval);
          return 100;
        }
        return newProgress;
      });
    }, 200);

    generateProfileMutation.mutate({ name, useAI });
  };

  const copyDNASequence = () => {
    if (profile) {
      navigator.clipboard.writeText(profile.dnaSequence.replace(/<br>/g, '\n'));
      toast({
        title: "Success",
        description: "DNA sequence copied to clipboard!",
      });
    }
  };

  const exportProfile = () => {
    if (profile) {
      const data = JSON.stringify(profile, null, 2);
      const blob = new Blob([data], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${profile.name}-genetic-profile.json`;
      a.click();
      URL.revokeObjectURL(url);
    }
  };

  const shareProfile = () => {
    if (profile) {
      const shareText = `Check out my genetic personality profile! I'm a ${profile.personalityType} with ${profile.stats.intelligence} Intelligence and ${profile.stats.strength} Strength. Generated by Genetic Personality Creator.`;
      if (navigator.share) {
        navigator.share({
          title: 'My Genetic Personality Profile',
          text: shareText,
        });
      } else {
        navigator.clipboard.writeText(shareText);
        toast({
          title: "Success",
          description: "Profile details copied to clipboard!",
        });
      }
    }
  };

  const resetForm = () => {
    setProfile(null);
    setName("");
    setLoadingProgress(0);
  };

  const getStatColor = (stat: string) => {
    switch (stat) {
      case 'strength': return 'bg-red-500';
      case 'intelligence': return 'bg-blue-500';
      case 'creativity': return 'bg-purple-500';
      case 'charisma': return 'bg-yellow-500';
      case 'wisdom': return 'bg-green-500';
      case 'luck': return 'bg-pink-500';
      default: return 'bg-gray-500';
    }
  };

  const getRarityColor = (rarity: string) => {
    switch (rarity) {
      case 'COMMON': return 'text-green-600';
      case 'RARE': return 'text-blue-600';
      case 'LEGENDARY': return 'text-purple-600';
      default: return 'text-gray-600';
    }
  };

  const getPersonalityIcon = (type: string) => {
    if (type.includes("Strategic")) return Brain;
    if (type.includes("Warrior")) return Shield;
    if (type.includes("Creative")) return Palette;
    if (type.includes("Diplomatic")) return Handshake;
    return Compass;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-slate-200 sticky top-0 z-50">
        <div className="max-w-6xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-r from-blue-600 to-green-600 rounded-lg flex items-center justify-center">
                <Dna className="text-white text-lg" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-slate-800">Genetic Personality Creator</h1>
                <p className="text-sm text-slate-600">DNA-Based Character Generation</p>
              </div>
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 py-8">
        {/* Hero Section */}
        {!profile && !generateProfileMutation.isPending && (
          <section className="text-center mb-12">
            <div className="inline-flex items-center space-x-2 bg-blue-600/10 text-blue-600 px-4 py-2 rounded-full text-sm font-medium mb-6">
              <FlaskRound className="w-4 h-4" />
              <span>Scientific Character Analysis</span>
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-slate-800 mb-4 leading-tight">
              Discover Your <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-green-600">Genetic</span> Personality
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto mb-8">
              Enter your name and let our advanced algorithm generate a unique DNA-based personality profile with RPG-style traits, strengths, and characteristics.
            </p>
          </section>
        )}

        {/* DNA Input Form */}
        {!profile && !generateProfileMutation.isPending && (
          <section className="mb-12">
            <div className="max-w-2xl mx-auto">
              <Card className="shadow-xl border border-slate-200">
                <CardContent className="p-8">
                  <div className="text-center mb-8">
                    <div className="w-16 h-16 bg-gradient-to-r from-green-600 to-teal-600 rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse">
                      <Microscope className="text-white text-2xl" />
                    </div>
                    <h3 className="text-2xl font-bold text-slate-800 mb-2">DNA Sequence Generator</h3>
                    <p className="text-slate-600">Enter your name to begin genetic analysis</p>
                  </div>

                  <form onSubmit={handleSubmit} className="space-y-6">
                    <div>
                      <Label className="text-sm font-semibold text-slate-700 mb-3">Full Name</Label>
                      <Input
                        type="text"
                        placeholder="Enter your full name..."
                        value={name}
                        onChange={(e) => setName(e.target.value)}
                        className="px-4 py-4 bg-slate-50 border-2 border-slate-200 rounded-xl focus:border-blue-600 focus:bg-white transition-all duration-200 text-lg"
                      />
                      <div className="flex items-center mt-2 text-sm text-slate-500">
                        <span>Names are processed using our proprietary genetic algorithm</span>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <Label className="text-sm font-semibold text-slate-700 mb-2">Analysis Depth</Label>
                        <Select value={analysisDepth} onValueChange={setAnalysisDepth}>
                          <SelectTrigger className="px-4 py-3 bg-slate-50 border-2 border-slate-200 rounded-xl focus:border-blue-600">
                            <SelectValue />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="standard">Standard Analysis</SelectItem>
                            <SelectItem value="deep">Deep Genetic Scan</SelectItem>
                            <SelectItem value="complete">Complete Profile</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                      <div>
                        <Label className="text-sm font-semibold text-slate-700 mb-2">Character Type</Label>
                        <Select value={characterType} onValueChange={setCharacterType}>
                          <SelectTrigger className="px-4 py-3 bg-slate-50 border-2 border-slate-200 rounded-xl focus:border-blue-600">
                            <SelectValue />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="balanced">Balanced Character</SelectItem>
                            <SelectItem value="warrior">Warrior Type</SelectItem>
                            <SelectItem value="scholar">Scholar Type</SelectItem>
                            <SelectItem value="artist">Artist Type</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                    </div>

                    <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-xl p-4 border border-purple-200">
                      <div className="flex items-center justify-between">
                        <div>
                          <Label className="text-sm font-semibold text-slate-700 mb-1">AI Enhancement</Label>
                          <p className="text-xs text-slate-600">Generate detailed ethical insights and career suggestions</p>
                        </div>
                        <Switch
                          checked={useAI}
                          onCheckedChange={setUseAI}
                          className="data-[state=checked]:bg-purple-600"
                        />
                      </div>
                    </div>

                    <Button
                      type="submit"
                      className="w-full bg-gradient-to-r from-blue-600 to-green-600 text-white py-4 px-8 rounded-xl font-semibold text-lg hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200"
                      disabled={generateProfileMutation.isPending}
                    >
                      <Dna className="mr-2" />
                      Generate DNA Profile
                    </Button>
                  </form>
                </CardContent>
              </Card>
            </div>
          </section>
        )}

        {/* Loading State */}
        {generateProfileMutation.isPending && (
          <section className="mb-12">
            <div className="max-w-2xl mx-auto">
              <Card className="shadow-xl border border-slate-200">
                <CardContent className="p-8 text-center">
                  <div className="animate-spin w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-6"></div>
                  <h3 className="text-xl font-bold text-slate-800 mb-2">Analyzing Genetic Sequence...</h3>
                  <p className="text-slate-600 mb-4">Processing DNA patterns and generating personality traits</p>
                  <Progress value={loadingProgress} className="h-2" />
                </CardContent>
              </Card>
            </div>
          </section>
        )}

        {/* Results Section */}
        {profile && (
          <section>
            {/* DNA Sequence Display */}
            <Card className="shadow-xl border border-slate-200 mb-8">
              <CardContent className="p-8">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h3 className="text-2xl font-bold text-slate-800">DNA Sequence Analysis</h3>
                    <p className="text-slate-600">Genetic code generated for: <span className="font-semibold">{profile.name}</span></p>
                  </div>
                  <Button onClick={copyDNASequence} variant="outline" className="bg-slate-100 hover:bg-slate-200">
                    <Copy className="mr-2 w-4 h-4" />Copy Sequence
                  </Button>
                </div>
                
                <div className="bg-slate-900 rounded-xl p-6 font-mono text-sm overflow-x-auto">
                  <div className="text-green-400 mb-2">// Generated DNA Sequence - Chromosome 1</div>
                  <div 
                    className="text-white leading-relaxed"
                    dangerouslySetInnerHTML={{ __html: profile.dnaSequence }}
                  />
                  <div className="text-slate-400 mt-4 text-xs">
                    Sequence Length: 75 base pairs | Uniqueness: 99.7% | Generated from name hash
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Character Profile */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
              
              {/* Core Stats */}
              <div className="lg:col-span-2">
                <Card className="shadow-xl border border-slate-200">
                  <CardContent className="p-8">
                    <h3 className="text-2xl font-bold text-slate-800 mb-6 flex items-center">
                      <Brain className="text-blue-600 mr-3" />
                      Character Profile
                    </h3>
                    
                    <div className="grid grid-cols-2 gap-6 mb-8">
                      {Object.entries(profile.stats).map(([stat, value]) => (
                        <div key={stat} className="flex items-center justify-between">
                          <span className="text-slate-600 capitalize">{stat}</span>
                          <div className="flex items-center space-x-2">
                            <div className="w-24 bg-slate-200 rounded-full h-2">
                              <div 
                                className={`${getStatColor(stat)} h-2 rounded-full`}
                                style={{ width: `${value}%` }}
                              />
                            </div>
                            <span className="text-sm font-semibold w-8">{value}</span>
                          </div>
                        </div>
                      ))}
                    </div>

                    {/* Personality Type */}
                    <Separator className="my-6" />
                    <div>
                      <h4 className="font-semibold text-slate-800 mb-3">Dominant Personality Type</h4>
                      <div className="bg-gradient-to-r from-blue-600/10 to-green-600/10 rounded-xl p-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
                            {(() => {
                              const IconComponent = getPersonalityIcon(profile.personalityType);
                              return <IconComponent className="text-white" />;
                            })()}
                          </div>
                          <div>
                            <h5 className="font-bold text-slate-800">{profile.personalityType}</h5>
                            <p className="text-slate-600 text-sm">Natural leader with analytical thinking and innovative problem-solving abilities</p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* Character Avatar & Quick Actions */}
              <div className="space-y-6">
                <Card className="shadow-xl border border-slate-200">
                  <CardContent className="p-6">
                    <div className="text-center">
                      <div className="w-32 h-32 bg-gradient-to-br from-blue-600 to-purple-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                        <Brain className="text-white text-4xl" />
                      </div>
                      <h4 className="font-bold text-slate-800 text-lg">{profile.name}</h4>
                      <p className="text-slate-600 text-sm">Level 1 {profile.personalityType}</p>
                    </div>
                    
                    <div className="mt-6 space-y-3">
                      <div className="flex justify-between items-center text-sm">
                        <span className="text-slate-600">Experience</span>
                        <span className="font-semibold">0/100 XP</span>
                      </div>
                      <Progress value={0} className="h-2" />
                    </div>
                  </CardContent>
                </Card>

                {/* Quick Actions */}
                <Card className="shadow-xl border border-slate-200">
                  <CardContent className="p-6">
                    <h4 className="font-bold text-slate-800 mb-4">Quick Actions</h4>
                    <div className="space-y-3">
                      <Button 
                        onClick={exportProfile}
                        className="w-full bg-blue-600/10 hover:bg-blue-600/20 text-blue-600 justify-start"
                        variant="ghost"
                      >
                        <Download className="mr-2 w-4 h-4" />
                        Export Profile
                      </Button>
                      <Button 
                        onClick={shareProfile}
                        className="w-full bg-green-600/10 hover:bg-green-600/20 text-green-600 justify-start"
                        variant="ghost"
                      >
                        <Share className="mr-2 w-4 h-4" />
                        Share Results
                      </Button>
                      <Button 
                        onClick={resetForm}
                        className="w-full bg-purple-600/10 hover:bg-purple-600/20 text-purple-600 justify-start"
                        variant="ghost"
                      >
                        <RotateCcw className="mr-2 w-4 h-4" />
                        Regenerate
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>

            {/* Strengths and Weaknesses */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
              <Card className="shadow-xl border border-slate-200">
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <Star className="text-yellow-500 mr-3" />
                    Core Strengths
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {profile.strengths.map((strength, index) => (
                    <div key={index} className="flex items-start space-x-3">
                      <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center flex-shrink-0">
                        <Star className="text-green-600 w-4 h-4" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-slate-800">{strength.name}</h4>
                        <p className="text-slate-600 text-sm">{strength.description}</p>
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>

              <Card className="shadow-xl border border-slate-200">
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <TriangleAlert className="text-orange-500 mr-3" />
                    Areas for Growth
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {profile.weaknesses.map((weakness, index) => (
                    <div key={index} className="flex items-start space-x-3">
                      <div className="w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center flex-shrink-0">
                        <TriangleAlert className="text-orange-600 w-4 h-4" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-slate-800">{weakness.name}</h4>
                        <p className="text-slate-600 text-sm">{weakness.description}</p>
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>
            </div>

            {/* AI Enhanced Insights */}
            {profile.aiEnhancements && (
              <Card className="shadow-xl border border-purple-200 mb-8 bg-gradient-to-br from-purple-50 to-blue-50">
                <CardContent className="p-8">
                  <h3 className="text-2xl font-bold text-slate-800 mb-6 flex items-center">
                    <Brain className="text-purple-600 mr-3" />
                    AI-Enhanced Insights
                  </h3>
                  
                  <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    {/* Life Philosophy */}
                    <div className="space-y-6">
                      <div className="bg-white/70 rounded-xl p-6 border border-purple-200">
                        <h4 className="font-semibold text-slate-800 mb-3 flex items-center">
                          <Compass className="text-purple-600 mr-2 w-5 h-5" />
                          Life Philosophy
                        </h4>
                        <p className="text-slate-700 leading-relaxed">{profile.aiEnhancements.life_philosophy}</p>
                      </div>

                      <div className="bg-white/70 rounded-xl p-6 border border-purple-200">
                        <h4 className="font-semibold text-slate-800 mb-3 flex items-center">
                          <Star className="text-purple-600 mr-2 w-5 h-5" />
                          Growth Potential
                        </h4>
                        <p className="text-slate-700 leading-relaxed">{profile.aiEnhancements.growth_potential}</p>
                      </div>
                    </div>

                    {/* Career Suggestions */}
                    <div className="bg-white/70 rounded-xl p-6 border border-purple-200">
                      <h4 className="font-semibold text-slate-800 mb-4 flex items-center">
                        <Lightbulb className="text-purple-600 mr-2 w-5 h-5" />
                        Ethical Career Paths
                      </h4>
                      <div className="space-y-3">
                        {profile.aiEnhancements.career_suggestions.map((career: string, index: number) => (
                          <div key={index} className="flex items-start space-x-3">
                            <div className="w-2 h-2 bg-purple-600 rounded-full mt-2 flex-shrink-0"></div>
                            <span className="text-slate-700 text-sm leading-relaxed">{career}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>

                  {/* Growth Opportunities */}
                  {profile.aiEnhancements.growth_opportunities && profile.aiEnhancements.growth_opportunities.length > 0 && (
                    <div className="mt-8 bg-white/70 rounded-xl p-6 border border-purple-200">
                      <h4 className="font-semibold text-slate-800 mb-4 flex items-center">
                        <TriangleAlert className="text-purple-600 mr-2 w-5 h-5" />
                        Growth Opportunities
                      </h4>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        {profile.aiEnhancements.growth_opportunities.map((opportunity: any, index: number) => (
                          <div key={index} className="space-y-3">
                            <h5 className="font-medium text-slate-800">{opportunity.growth_area}</h5>
                            <p className="text-slate-600 text-sm">{opportunity.opportunity_description}</p>
                            <div className="space-y-1">
                              <p className="text-xs font-medium text-slate-700">Action Steps:</p>
                              {opportunity.action_steps.map((step: string, stepIndex: number) => (
                                <div key={stepIndex} className="flex items-center space-x-2">
                                  <div className="w-1 h-1 bg-purple-600 rounded-full"></div>
                                  <span className="text-xs text-slate-600">{step}</span>
                                </div>
                              ))}
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            )}

            {/* Special Abilities */}
            <Card className="shadow-xl border border-slate-200 mb-8">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Star className="text-purple-600 mr-3" />
                  Special Abilities
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  {profile.abilities.map((ability, index) => {
                    const IconComponent = iconMap[ability.icon as keyof typeof iconMap] || Star;
                    return (
                      <div key={index} className="border border-slate-200 rounded-xl p-6 hover:border-blue-600 transition-colors">
                        <div className="w-12 h-12 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center mb-4">
                          <IconComponent className="text-white" />
                        </div>
                        <h4 className="font-bold text-slate-800 mb-2">{ability.name}</h4>
                        <p className="text-slate-600 text-sm mb-3">{ability.description}</p>
                        <Badge variant="outline" className={`text-xs font-semibold ${getRarityColor(ability.rarity)}`}>
                          {ability.rarity} ABILITY
                        </Badge>
                      </div>
                    );
                  })}
                </div>
              </CardContent>
            </Card>

          </section>
        )}
      </main>

      {/* Footer */}
      <footer className="bg-slate-800 text-white py-12 mt-16">
        <div className="max-w-6xl mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-8 h-8 bg-gradient-to-r from-blue-600 to-green-600 rounded-lg flex items-center justify-center">
                  <Dna className="text-white text-sm" />
                </div>
                <span className="font-bold">GenePro</span>
              </div>
              <p className="text-slate-400 text-sm">Advanced genetic personality analysis using cutting-edge algorithms.</p>
            </div>
            <div>
              <h4 className="font-semibold mb-4">Features</h4>
              <ul className="space-y-2 text-sm text-slate-400">
                <li>DNA Analysis</li>
                <li>Character Profiles</li>
                <li>RPG Stats</li>
                <li>Export Options</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">Science</h4>
              <ul className="space-y-2 text-sm text-slate-400">
                <li>Algorithm Details</li>
                <li>Research Papers</li>
                <li>Methodology</li>
                <li>Accuracy Reports</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">Support</h4>
              <ul className="space-y-2 text-sm text-slate-400">
                <li>Help Center</li>
                <li>Contact Us</li>
                <li>Privacy Policy</li>
                <li>Terms of Service</li>
              </ul>
            </div>
          </div>
          <div className="border-t border-slate-700 mt-8 pt-8 text-center text-slate-400 text-sm">
            <p>&copy; 2024 Genetic Personality Creator. All rights reserved.</p>
          </div>
        </div>
      </footer>
    </div>
  );
}
